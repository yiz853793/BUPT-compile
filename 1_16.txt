typedef struct {
    char word[MAX_WORD_LENGTH];
    int count;
} WordCount;

int main() {
    char inputFileName[] = "input.txt";
    char outputFileName[] = "output.txt";

    // 打开输入文件
    FILE *inputFile = fopen(inputFileName, "r");
    if (inputFile == NULL) {
        printf("无法打开输入文件 %s\n", inputFileName);
        return 1;
    }

    // 打开输出文件
    FILE *outputFile = fopen(outputFileName, "w");
    if (outputFile == NULL) {
        printf("无法创建输出文件 %s\n", outputFileName);
        fclose(inputFile);
        return 1;
    }

    // 初始化单词计数数组
    WordCount wordCounts[MAX_WORD_LENGTH];
    int numWords = 0;

    // 读取输入文件并统计单词
    char word[MAX_WORD_LENGTH];
    while (fscanf(inputFile, "%s", word) != EOF) {
        // 去除单词中的标点符号和转换为小写
        int len = strlen(word);
        for (int i = 0; i < len; i++) {
            if (ispunct(word[i])) {
                word[i] = '\0'; // 去除标点符号
                break;
            }
            word[i] = tolower(word[i]); // 转换为小写
        }

        // 查找单词是否已存在
        int found = 0;
        for (int i = 0; i < numWords; i++) {
            if (strcmp(wordCounts[i].word, word) == 0) {
                wordCounts[i].count++;
                found = 1;
                break;
            }
        }

        // 如果单词未找到，则添加到数组中
        if (!found) {
            strcpy(wordCounts[numWords].word, word);
            wordCounts[numWords].count = 1;
            numWords++;
        }
    }

    // 写入单词统计结果到输出文件
    for (int i = 0; i < numWords; i++) {
        fprintf(outputFile, "%s: %d\n", wordCounts[i].word, wordCounts[i].count);
    }

    // 关闭文件
    fclose(inputFile);
    fclose(outputFile);

    printf("单词统计已完成，结果已写入 %s\n", outputFileName);

    return 0;
}